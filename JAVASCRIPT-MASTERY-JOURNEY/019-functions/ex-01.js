// –ù–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç
// –ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç
function printHello() {
  console.log("–ü—Ä–∏–≤–µ—Ç!");
}

// –ù–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç
// –ü—Ä–∏–Ω–∏–º–∞—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã
function printHello(nickname) {
  console.log(`–ü—Ä–∏–≤–µ—Ç ,${nickname}!`);
}

// –í–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// –ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç
function getHelloText() {
  return "–ü—Ä–∏–≤–µ—Ç!";
}

// –í–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// –ü—Ä–∏–Ω–∏–º–∞—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã
function getHelloTextForUser(nickname) {
  return `–ü—Ä–∏–≤–µ—Ç ,${nickname}!`;
}

// –ü—Ä–∏–º–µ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –≤—ã–∑–æ–≤–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
function greet(username) {
  console.log(`–ü—Ä–∏–≤–µ—Ç, ${username}!`);
}

greet("–ê–ª—è"); // –í—ã–≤–µ–¥–µ—Ç "–ü—Ä–∏–≤–µ—Ç, –ê–ª—è!"

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ —Å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
// function add(a, b) {
//     return a + b;
// }

// let result = add(3, 5); // result —Ä–∞–≤–µ–Ω 8

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
function sayHello(username) {
  let message = `–ü—Ä–∏–≤–µ—Ç, ${username}!`;
  console.log(message);
}

sayHello("–ò–≤–∞–Ω"); // –í—ã–≤–µ–¥–µ—Ç "–ü—Ä–∏–≤–µ—Ç, –ò–≤–∞–Ω!"

// ***
console.log();
// –ü—Ä–∏–º–µ—Ä –∑–∞–º—ã–∫–∞–Ω–∏—è (closures)
console.log(`–ü—Ä–∏–º–µ—Ä –∑–∞–º—ã–∫–∞–Ω–∏—è (closures)`);
console.log(`–≤–Ω–µ—à–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è: function outerFunction()`);
function outerFunction() {
  let outerVariable = "–Ø –°–ù–ê–†–£–ñ–ò  üòé !";
  console.log(`–≤–Ω–µ—à–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: let outerVariable = "–Ø –°–ù–ê–†–£–ñ–ò  üòé !"`);
  function innerFunction() {
    console.log(`–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è: function innerFunction()`);
    console.log(outerVariable);
  }
  console.log(`–í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏: return innerFunction`);
  return innerFunction;
}
console.log(
  `–ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: const myFunction = outerFunction(`
);
const myFunction = outerFunction();
console.log(`–≤—ã–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: myFunction()`);
myFunction(); // –í—ã–≤–µ–¥–µ—Ç "–Ø —Å–Ω–∞—Ä—É–∂–∏!"
console.log();

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
console.log(`—Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞—é—â–∞—è –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞`);
console.log(`function applyOperation(x, y, operation) {return operation(x, y);}`);
function applyOperation(x, y, operation) {
  return operation(x, y);
}
console.log(`// function add(x, y) {
//   return x + y;
// }`);
console.log(`–ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
console.log(`const add = (x, y) => x + y`);
const add = (x, y) => x + y;
console.log(`const div = (x, y) => x / y`);
const div = (x, y) => x / y;
console.log(`let result1 = applyOperation(5, 3, add)`);
let result1 = applyOperation(5, 3, add);
console.log(`result1: ${result1}`);
console.log(`let result = applyOperation(12, 3, div)`);
let result = applyOperation(12, 3, div); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 4
console.log(`result: ${result}`);
console.log();

// –ü—Ä–∏–º–µ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –≤—ã–∑–æ–≤–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
console.log(`–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏ –≤—ã–∑–æ–≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
console.log(`const multiply = function (a, b) {return a * b;}`);
const multiply = function (a, b) {
  return a * b;
};
console.log(`let result2 = multiply(4, 6)`);
let result2 = multiply(4, 6); // result2 —Ä–∞–≤–µ–Ω 24
console.log(`result2: ${result2}`);
console.log();
let result3 = applyOperation(12, 3, multiply); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 4
console.log(`let result3 = applyOperation(12, 3, multiply)`);
console.log(`result3: ${result3}`);
console.log();

console.log(`const sayHi = function (firstName) {console.log(–ü—Ä–Æ–≤–µ—Ç, firstName!)};`);
const sayHi = function (firstName) {
  console.log(`–ü—Ä–Æ–≤–µ—Ç, ${firstName}!`);
};
console.log(`–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏: sayHi("–≤–æ–ª–∫—É!!")`);
sayHi("–≤–æ–ª–∫—É!!"); //
console.log();
// –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
console.log(`function assistantMin(num1, num2) {let tempMin;`);
// function assistantMin(num1, num2) {
//   let tempMin;

//   if (num1 < num2) {
//     tempMin = num1;
//   } else {
//     tempMin = num2;
//   }
//   console.log("–≤—Å—ë —á—Ç–æ –¥–æ 'return tempMin' –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è");
//   return tempMin;
//   console.log(`–Ω–µ –±—É–¥–µ—Ç –ø–µ—á–∞—Ç–∞—Ç—å`);
// }
// console.log(`let res = assistantMin(14, 21)`);
// let res = assistantMin(14, 21);
// console.log(`res: ${res}`);
// console.log();
//–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
console.log(`–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
console.log(`const assistantMin = (num1, num2) => (num1 < num2 ? num1 : num2)`);
const assistantMin = (num1, num2) => (num1 < num2 ? num1 : num2);
console.log(`let res = assistantMin(14, 21)`);
let res = assistantMin(14, 21);
console.log(`res: ${res}`);
console.log();
console.log();
